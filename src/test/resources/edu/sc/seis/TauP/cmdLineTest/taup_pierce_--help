Usage: taup pierce [--amp] [--debug] [--first] [--geodetic] [--geodetic]
                   [--help] [--nodiscon] [--rayp] [--rev] [--time] [--turn]
                   [--under] [--verbose] [--az=<azimuth>] [--az=<azimuth>]
                   [--baz=<backAzimuth>] [--baz=<backAzimuth>]
                   [--ellipflattening=<ellipflattening>]
                   [--ellipflattening=<ellipflattening>] [--mw=<mw>]
                   [-o=<outFile>] [--prop=<toolPropsFilename>] [--deg=d[,
                   d...]]... [--deg=d[,d...]]... [--exactdegree=d[,d...]]...
                   [--exactdegree=d[,d...]]... [--exactkilometer=km[,km...]]...
                   [--exactkilometer=km[,km...]]... [--km=km[,km...]]...
                   [--km=km[,km...]]... [--pierce=<addDepth>]...
                   [--rayparamdeg=<shootRaypList>[,<shootRaypList>...]]...
                   [--rayparamdeg=<shootRaypList>[,<shootRaypList>...]]...
                   [--rayparamidx=<shootIndexRaypList>[,
                   <shootIndexRaypList>...]]...
                   [--rayparamidx=<shootIndexRaypList>[,
                   <shootIndexRaypList>...]]... [--rayparamkm=<shootKmRaypList>
                   [,<shootKmRaypList>...]]... [--rayparamkm=<shootKmRaypList>[,
                   <shootKmRaypList>...]]...
                   [--rayparamrad=<shootRadianRaypList>[,
                   <shootRadianRaypList>...]]...
                   [--rayparamrad=<shootRadianRaypList>[,
                   <shootRadianRaypList>...]]... [--rel=<relativePhaseName>[,
                   <relativePhaseName>...]]... [--takeoff=<takeoffAngle>[,
                   <takeoffAngle>...]]... [--takeoff=<takeoffAngle>[,
                   <takeoffAngle>...]]... [--evt=<eventLatLon>
                   <eventLatLon>]... [--evt=<eventLatLon> <eventLatLon>]...
                   [--sta=<stationLatLon> <stationLatLon>]...
                   [--sta=<stationLatLon> <stationLatLon>]...
                   [[--mod=<modelname>] [-h=<sourceDepth>] [--stadepth=depth]
                   [--scat=s s]...] [[-p=<phaseNames>[,<phaseNames>...]]...
                   [--phasefile=<phaseFiles>]...] [--text | --json]
calculate pierce points for phases at discontinuities in the model
      --amp                  amplitude factor for each phase
      --debug                enable debugging output
      --first, --onlyfirst   only output the first arrival for each phase, no
                               triplications
      --help                 display this help message
      --mw=<mw>              scale amplitude by source moment magnitude
      --nodiscon             only prints pierce points for the depths added
                               with -pierce
  -o, --output=<outFile>     output to file, default is stdout.
      --pierce=<addDepth>    adds depth for calculating pierce points
      --prop=<toolPropsFilename>
                             load defaults from properties file
      --rayp, --onlyrayp     only output the ray parameter
      --rel=<relativePhaseName>[,<relativePhaseName>...]
                             times relative to the first of the given phases
      --rev                  only prints underside and bottom turn points, e.g.
                               ^ and v
      --time, --onlytime     only output travel time
      --turn                 only prints bottom turning points, e.g. v
      --under                only prints underside reflection points, e.g. ^
      --verbose              enable verbose output
Model Args
  -h, --evdepth, --sourcedepth=<sourceDepth>
                             source depth in km
      --mod, --model=<modelname>
                             use velocity model "modelname" for calculations.
                             Default is iasp91.
      --scat, --scatter=s s  scattering depth and distance in degrees, which
                               may be negative. Only effects phases with 'o' or
                               'O' in the phase name.
      --stadepth, --receiverdepth=depth
                             the receiver depth in km for stations not at the
                               surface
Phase Names
  -p, --ph, --phase=<phaseNames>[,<phaseNames>...]
                             seismic phase names
      --phasefile=<phaseFiles>
                             read list of phase names from file
Distance is given by:
      --az=<azimuth>         azimuth in degrees
      --baz=<backAzimuth>    backazimuth in degrees
      --deg, --degree=d[,d...]
                             distance in degrees
      --ellipflattening=<ellipflattening>
                             Elliptical flattening for distance calculations
                               when --geodetic, defaults to WGS84 ~ 1/298.257
      --evt, --event=<eventLatLon> <eventLatLon>
                             event latitude and longitude
      --exactdegree=d[,d...] exact distance traveled in degrees, not 360-d
      --exactkilometer=km[,km...]
                             exact distance traveled in kilometers, not 360-k
      --geodetic             use geodetic latitude for distance calculations,
                               which implies an ellipticity. Default is
                               spherical. Note this only affects calculation of
                               distance from lat/lon, all travel time
                               calculations are done in a purely spherical
                               model.
      --km, --kilometer=km[,km...]
                             distance in kilometers
      --rayparamdeg=<shootRaypList>[,<shootRaypList>...]
                             ray parameter from the source in s/deg, up or down
                               is determined by the phase
      --rayparamidx=<shootIndexRaypList>[,<shootIndexRaypList>...]
                             ray parameter from the source as index into model
                               sampling, up or down is determined by the phase
      --rayparamkm=<shootKmRaypList>[,<shootKmRaypList>...]
                             ray parameter from the source in s/km, up or down
                               is determined by the phase
      --rayparamrad=<shootRadianRaypList>[,<shootRadianRaypList>...]
                             ray parameter from the source in s/rad, up or down
                               is determined by the phase
      --sta, --station=<stationLatLon> <stationLatLon>
                             station latitude and longitude
      --takeoff=<takeoffAngle>[,<takeoffAngle>...]
                             takeoff angle in degrees from the source zero is
                               down, 90 horizontal, 180 is up
Output Type
      --json                 outputs as JSON
      --text                 outputs as text
