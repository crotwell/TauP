package edu.sc.seis.TauP;


import java.io.PrintWriter;
import java.util.ArrayList;

public class SvgUtil {

    public static void xyplotScriptBeginning(PrintWriter out, String toolName, String[] cmdLineArgs, float mapWidth, int plotOffset) {
        float pixelWidth =  (72.0f*mapWidth);
        out.println("<svg version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 "+(pixelWidth)+" "+(pixelWidth)+"\">");
        SvgUtil.cmdLineArgAsComment(out, toolName, cmdLineArgs);
        out.println("<!--\n Generated by The TauP Toolkit, www.seis.sc.edu/taup -->");
        out.println("<defs>");
        out.println("    <style type=\"text/css\"><![CDATA[");
        out.println("        circle {");
        out.println("            vector-effect: non-scaling-stroke;");
        out.println("            stroke: grey;");
        out.println("            fill: transparent;");
        out.println("        }");
        out.println("        .xtick {");
        out.println("            text-anchor: middle;");
        out.println("            dominant-baseline: middle;");
        out.println("        }");
        out.println("        .ytick {");
        out.println("            text-anchor: end;");
        out.println("            dominant-baseline: middle;");
        out.println("        }");
        out.println("        line.tick {");
        out.println("            vector-effect: non-scaling-stroke;");
        out.println("            stroke: black;");
        out.println("            fill: transparent;");
        out.println("        }");
        out.println("        .ylabel {");
        out.println("            text-anchor: middle;");
        out.println("            dominant-baseline: middle;");
        out.println("        }");
        out.println("        .phaselabel {");
        out.println("            text-anchor: end;");
        out.println("            dominant-baseline: middle;");
        out.println("        }");
        out.println("        polyline {");
        out.println("            vector-effect: non-scaling-stroke;");
        out.println("            stroke: black;");
        out.println("            fill: transparent;");
        out.println("        }");
        out.println("        polyline.sourcedepth {");
        out.println("            stroke: lightgrey;");
        out.println("        }");
        out.println("        polyline.receiverdepth {");
        out.println("            stroke: lightgrey;");
        out.println("        }");
        out.println("        polyline.scattererdepth {");
        out.println("            stroke: lightgrey;");
        out.println("        }");
        out.println("        polyline.swave {");
        out.println("            stroke: red;");
        out.println("        }");
        out.println("        polyline.pwave {");
        out.println("            stroke: blue;");
        out.println("        }");
        out.println("        circle.discontinuity {");
        out.println("            vector-effect: non-scaling-stroke;");
        out.println("            stroke: grey;");
        out.println("            fill: none;");
        out.println("        }");
        out.println("        circle.discontinuity.surface {");
        out.println("            fill: lightgoldenrodyellow;");
        out.println("        }");
        out.println("        circle.discontinuity.moho {");
        out.println("            fill: blanchedalmond;");
        out.println("        }");
        out.println("        circle.discontinuity.cmb {");
        out.println("            fill: lemonchiffon;");
        out.println("        }");
        out.println("        circle.discontinuity.iocb {");
        out.println("            fill: burlywood;");
        out.println("        }");
        out.println("    ]]></style>");
        out.println("</defs>");
        out.println("<g transform=\"translate("+plotOffset+","+plotOffset+")\" >");
        out.println("<!-- draw axis and label distances.-->");
        out.println();

    }

    public static void cmdLineArgAsComment(PrintWriter out, String cmd, String[] args) {
        out.println("<!-- ");
        out.println("   created with TauP "+ BuildVersion.getVersion());
        out.print("    "+cmd+" ");
        for (String s : args) {
            if (s.startsWith("--")) {
                s = "&#45;&#45;"+s.substring(2);
            }
            out.print(s+" ");
        }
        out.println();
        out.println("-->");
    }

    public static void createXYAxes(PrintWriter out,
                                    double minX, double maxX, int numXTicks, boolean xEndFixed,
                                    double minY, double maxY, int numYTicks, boolean yEndFixed,
                                    float pixelWidth, float margin,
                                    String title, String xLabel, String yLabel) {
        float plotWidth = pixelWidth - margin;
        float tick_length = 10;
        float text_height = 12; // guess text font height to shift x-axis tick labels
        ArrayList<Double> xTicks = PlotTicks.getTicks(minX, maxX, numXTicks);
        ArrayList<Double> yTicks = PlotTicks.getTicks(minY, maxY, numYTicks);
        out.println("<text x=\""+(pixelWidth/2-margin)+"\" y=\""+(-1*margin)+"\">"+title+"</text>");
        out.println("<g> <!-- y axis -->");
        int yLabel_y = Math.round(plotWidth / 2);
        int yLabel_x = Math.round(-1 * 1.8f*margin );
        out.println("<g  >");
        out.println("  <text font-size=\"14\" transform=\"translate("+yLabel_x+", "+yLabel_y+") rotate(-90 )\" dy=\".75em\" text-anchor=\"middle\" class=\"ylabel\" >" + yLabel + "</text>");
        out.println("</g>");
        out.println("<line  class=\"tick\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\""+(plotWidth)+"\" />");
        for (double tick: yTicks) {
            // Y axis
            double tick_pixel;
            if (maxY > minY) {
                tick_pixel = (tick-minY ) / (maxY-minY) * plotWidth;
            } else {
                tick_pixel = (minY-tick) / (minY-maxY) * plotWidth;
            }
            String tick_text = ""+tick;
            out.println("<text class=\"ytick\" font-size=\"12\" x=\"" + (-1 * tick_length - 2) + "\" y=\"" + (plotWidth - tick_pixel) + "\">" + tick_text + "</text>");
            out.println("<line class=\"tick\" x1=\"0\" y1=\"" + (plotWidth - tick_pixel) + "\" x2=\"-" + tick_length + "\" y2=\"" + (plotWidth - tick_pixel) + "\" />");
        }
        out.println("</g> <!-- y axis end-->");
        out.println("<g> <!-- x axis -->");
        out.println("<text class=\"xlabel\" font-size=\"14\" x=\"" + (plotWidth / 2) + "\" y=\"" + (2.2*text_height + tick_length + plotWidth) + "\">" + xLabel + "</text>");
        out.println("<line class=\"tick\" x1=\"0\" y1=\""+(plotWidth)+"\" x2=\""+(plotWidth)+"\" y2=\""+(plotWidth)+"\" />");
        for (double tick: xTicks) {
            // X axis
            double tick_pixel;
            if (maxX > minX) {
                tick_pixel = (tick-minX) / (maxX-minX) * plotWidth;
            } else {
                tick_pixel = (minX-tick) / (minX-maxX) * plotWidth;
            }
            String tick_text = ""+tick;
            out.println("<text class=\"xtick\" font-size=\"12\" x=\"" + tick_pixel + "\" y=\"" + (text_height + tick_length + plotWidth) + "\">" + tick_text + "</text>");
            out.println("<line class=\"tick\" x1=\"" + tick_pixel + "\" y1=\"" + (plotWidth) + "\" x2=\"" + tick_pixel + "\" y2=\"" + (plotWidth + tick_length) + "\" />");

        }
        out.println("</g> <!-- x axis end-->");

    }
}
